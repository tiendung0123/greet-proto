// ファイル: greet.proto
// 説明: GreetServiceの定義

// これは、コンピュータ同士が話すための特別な言葉のルールを決めるファイルです。
// ここでは、挨拶をするサービスを定義しています。

syntax = "proto3";  // プロトコルバッファのバージョンを指定しています。

package greet.v1;  // パッケージの名前を指定しています。これは、ファイルのグループ名のようなものです。

option go_package = "github.com/tiendung0123/greet-proto/gen/go/proto;proto";
// これは、Go言語用のパッケージを指定しています。
// "github.com/f-sbk0716/greet-proto/gen/go/proto" は、生成されたGoコードが配置されるディレクトリのパスです。
// "proto" は、生成されたGoコードのパッケージ名です。
// これにより、Go言語でこのファイルを使うときに、どのディレクトリにコードが生成され、どのパッケージ名でインポートされるかが決まります。

// 挨拶をお願いするときのメッセージ
message GreetRequest {
  string name = 1;  // 挨拶してほしい人の名前を入れる場所です。
}

// 挨拶の返事のメッセージ
message GreetResponse {
  string greeting = 1;  // 挨拶文を入れる場所です。
}

// 挨拶サービスの定義
service GreetService {
  // Greet: 名前を受け取って挨拶を返す
  rpc Greet(GreetRequest) returns (GreetResponse) {}
  // これは、Greetという名前のサービスです。
  // GreetRequestというメッセージを受け取って、GreetResponseというメッセージを返します。
  // 例えば、「太郎」という名前を送ると、「こんにちは、太郎さん！」という挨拶を返します。
}